@page "/"

@inject IJSRuntime JS

@using MeuApp.Shared.Components
@using MeuApp.Shared.Components.Dashboards
@using System.Threading.Tasks

<PageTitle>Home</PageTitle>

<RelatorioAtualizacoes />

<div class="content">
    <!-- NOME DO PRODUTO E LOGO -->
    <div class="d-flex">
        <img class="d-none d-md-block" style="width:40px; height:40px; object-fit:cover; margin-right: 10px;" src="_content/MeuApp.Shared/images/logo.png" alt="">
        <h1 class="d-flex gap-2 gap-md-0 flex-md-column fw-bold" style="width: 200px;">
            <span class="text-primary-emphasis d-block" style="font-family: Bruno Ace, sans-serif;">nucleu</span> 
            <span class="text-success-emphasis d-flex justify-content-end" style="font-family: Zen dots, sans-serif;">Omnis</span>
        </h1>
    </div>

    <!-- iNSERSÃO DE DADOS BÁSICOS (NOME E CONTATO)-->
    @if(!ExibirDados)
    {
        <h4 class="mt-3 fw-bold">Inserção de dados (teste)</h4>
        <p class="text-secondary mt-2">Inserção de informações básicas</p>

        <div class="d-flex flex-column" style="max-width: 300px; margin: 0 10px;">
            <label for="Nome">Nome:</label>
            <input @bind="Nome" type="text" class="form-control" id="Nome" placeholder="Digite seu nome" />
            
            <label style="margin-top: 20px" for="Tel">Contato:</label>
            <input @bind="Tel" type="tel" class="form-control" id="Tel" placeholder="(XX) XXXXX-XXXX" />

            <button @onclick="Verificar" type="button" class="btn btn-primary" style="margin-top: 20px;">Verificar</button>
        </div>
    }else
    {
        <div class="d-flex flex-column" style="max-width: 300px; margin: 60px 10px; border-radius: 10px; box-shadow: 0px 0px 20px rgba(0, 0, 0, 0.24); padding: 10px;">
            <h3>Dados Inseridos</h3>

            <p><strong>Nome:</strong> @Nome</p>
            <p><strong>Contato:</strong> @Tel</p>

            <button @onclick="Verificar" type="button" class="btn btn-secondary">Tentar novamente</button>
        </div>
    }

    <!-- CONSULTA POR CEP -->
    <h4 class="mt-5 fw-bold">Consulta via CEP</h4>
    <p class="text-secondary">Insira um CEP válido e obtenha dados de localização</p>

    <div class="d-flex gap-2" style="max-width: 300px;">
        <input @bind="cep" type="text" 
        class="form-control @(consultouCep && !cepValido ? "is-invalid" : "")" 
        placeholder="@( consultouCep && !cepValido ? "CEP inválido" : "Insira o CEP")" />

        <button class="btn btn-success" @onclick="ConsultarCep">
            @if(consultandoCep)
            {
            <div class="spinner-grow" role="status" style="width: 16px; height: 16px;">
                <span class="visually-hidden">Loading...</span>
            </div>
            }
            else
            {
                <span>Consultar</span>
            }
        </button>
    </div>

    <!-- BTN CHAMAR WHATSAPP -->
    <h4 class="mt-5 fw-bold">Atendimento via WhatsApp</h4>
    <p class="text-secondary">Contato direto com cliente reduzindo tempo de pesquisa</p>
    <a href="https://wa.me/5511947192987" target="_blank" class="btn btn-success rounded-pill">Chamar <span class="bi bi-headset ms-2"></span></a>

    <!-- GERADOR DE PDF -->
    <h4 class="mt-5 fw-bold">Geração e encaminhamento de PDF</h4>

    <p class="mt-3 text-secondary lh-1">
        Para gerar PDF preencha os campos nome e contato (fictício), CEP válido e clique em consultar.
    <br>
        (O encaminhamento via email e whatsapp foram temporariamente desabilitados para fins de teste)
    </p>

    <p class="text-danger-emphasis">Geração de PDF temporariamente indisponível (servidor desligado)</p>

    @if(Nome != null && Tel != null && cepValido)
    {
        <button type="button" class="btn btn-outline-danger mt-2" @onclick="GerarPdf">Gerar e encaminhar PDF</button>

        @if(gerandoPdf){
            <div>
                <div class="spinner-grow mt-4 text-danger" role="status">
                    <span class="visually-hidden">Loading...</span>
                </div>
                <p>Gerando...</p>
            </div>
        }
    }

    @if(pdfBase64 != null)
    {
        <div class="d-flex align-items-center justify-content-between mt-3 btn btn-dark" style="max-width: 148px"
        @onclick="() => pdfBase64 = null">
            <p class="mb-0">Fechar PDF</p>
            <button type="button" class="ms-2 btn btn-close" style="filter: invert(1);" />
        </div>
        <iframe class="mt-4" src="@($"data:application/pdf;base64,{pdfBase64}")"
            width="100%" height="600px">
        </iframe>
    }

    <!-- Modal -->
    <Modal cep="@cep" logradouro="@logradouro" bairro="@bairro" localidade="@localidade" uf="@uf" />

    <!-- DASHBOARDS -->
    <h4 class="mt-5 fw-bold">Dashboards</h4>
    <p class="text-secondary">
        Os dados gerados é uma simulação <br/> para mais modelos veja > 
        <NavLink href="dashboards">
            <button class="btn btn-success">Dashboards</button>
        </NavLink>
    </p>

    <!-- grafico -->
    <div style="max-width: 780px; width: 100%; margin-bottom: 28px;">
        <div class="d-flex justify-content-center align-items-center gap-2">
            <div style="width: 28px; height: 12px; background-color: rgba(38, 176, 79, 0.51); border-radius: 8px; border: 1px solid #1b6ec2;"></div>
            <p class="mb-0 text-secondary">vendas</p>
        </div>

        <div class="container-dashboard" >
            <canvas id="firstChart"></canvas>
        </div>
    </div>
</div>



@code {
    private string Nome;
    private string Tel;
    private bool ExibirDados = false;

    private string cep;
    private string logradouro;
    private string bairro;
    private string localidade;
    private string uf;

    private bool consultandoCep = false;

    private bool consultouCep = false;
    private bool cepValido = false;

    private string? pdfBase64 = null;
    private bool gerandoPdf = false;

    private async Task ConsultarCep()
    {
        consultouCep = true;

        if(string.IsNullOrWhiteSpace(cep)){
            cepValido = false;
            return;
        }

        consultandoCep = true;

        HttpClient? client = new HttpClient();

        HttpResponseMessage? response = await client.GetAsync($"https://viacep.com.br/ws/{cep}/json/");

        if(!response.IsSuccessStatusCode)
        {
            cepValido = false;
            cep = "";
        }
        else
        {
            var dados = await response.Content.ReadFromJsonAsync<Endereco>();
            if (dados != null)
            {
                logradouro = dados.Logradouro;
                bairro = dados.Bairro;
                localidade = dados.Localidade;
                uf = dados.Uf;
            }

            cepValido = true;
            await JS.InvokeVoidAsync("showBootstrapModal", "cepModal");
        }

        consultandoCep = false;
    }

    public async Task GerarPdf()
    {
        gerandoPdf = true;
        var data = new
        {
            nome = Nome,
            telefone = Tel,
            cep = cep,
            logradouro = logradouro,
            bairro = bairro,
            localidade = localidade,
            uf = uf
        };

        var json = JsonSerializer.Serialize(data);

        StringContent content = new StringContent(json, Encoding.UTF8, "application/json");

        HttpClient? client = new HttpClient();

        HttpResponseMessage? response = await client.PostAsync("http://localhost:8080/api/pdf/generate", content);

        if (response.IsSuccessStatusCode)
        {
            pdfBase64 = await response.Content.ReadAsStringAsync();
        }else
        {
            pdfBase64 = $"Erro ao gerar pdf: Erro {response.StatusCode}";
        }

        Nome = null;
        Tel = null;
        cepValido = false;
        gerandoPdf = false;
    }

    private void Verificar()
    {
        ExibirDados = !ExibirDados;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if(firstRender)
            await InvokeAsync(()=> JS.InvokeVoidAsync("firstBarGraph", "firstChart", "line"));
    }
}
